name: tests
on:
  push:
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - ".pre-commit-config.yaml"
      - "LICENSE.txt"
      - "NOTICE.md"
      - "images/**"
      - ".github/dependabot.yml"
      - ".github/workflows/lint.yml"
      - ".vscode/settings.json"
      - "docs/**"
      - ".readthedocs.yml"
    branches:
      - main
  pull_request:
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - ".pre-commit-config.yaml"
      - "LICENSE.txt"
      - "NOTICE.md"
      - "images/**"
      - ".github/dependabot.yml"
      - ".github/workflows/lint.yml"
      - ".vscode/settings.json"
      - "docs/**"
      - ".readthedocs.yml"

jobs:
  tests:
    env:
      TEST_IMG_OUTPUT_PATH: 'widget-gallery_img'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python: ['3.7', '3.8', '3.9', '3.10']
        qt-lib: ['pyqt', 'pyside', 'none']
        include:
          - {py: '3.7', qt-lib: 'pyqt', qt: 'PyQt5'}
          - {py: '3.7', qt-lib: 'pyside', qt: 'PySide2'}
          - {py: '3.7', qt-lib: 'none', qt: 'none'}
          - {py: '3.8', qt-lib: 'pyqt', qt: 'PyQt5'}
          - {py: '3.8', qt-lib: 'pyside', qt: 'PySide6'}
          - {py: '3.8', qt-lib: 'none', qt: 'none'}
          - {py: '3.9', qt-lib: 'pyqt', qt: 'PyQt6'}
          - {py: '3.9', qt-lib: 'pyside', qt: 'PySide6'}
          - {py: '3.9', qt-lib: 'none', qt: 'none'}
          - {py: '3.10', qt-lib: 'pyqt', qt: 'PyQt6'}
          - {py: '3.10', qt-lib: 'pyside', qt: 'PySide6'}
          - {py: '3.10', qt-lib: 'none', qt: 'none'}
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} py-${{ matrix.py }} qt-${{ matrix.qt }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.py }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.py }}

    - name: Get full Python version
      id: full-py-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Bootstrap poetry
      shell: bash
      run: curl -sL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

    - name: Update PATH
      if: runner.os != 'Windows'
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Update PATH for Windows
      shell: bash
      if: runner.os == 'Windows'
      run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

    - name: Configure poetry
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-py-version.outputs.version }}-${{ matrix.qt }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install

    - name: Install Qt lib
      if: ${{ matrix.qt }} != 'none'
      run: poetry run pip install -U ${{ matrix.qt }}

    - name: "Install Linux dependencies"
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -y
        sudo apt-get install --no-install-recommends -y libxkbcommon-x11-0 libopengl0 libyaml-dev libegl1-mesa libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0

    - name: Run pytest
      if: matrix.qt != 'none'
      run: poetry run pytest --cov -v tests --cov-report=term-missing --cov-report=xml

    - name: Run pytest without qt
      if: matrix.qt == 'none'
      run: |
        poetry run pip uninstall -y pytest-qt
        poetry run pytest tests --cov -v --cov-report=term-missing --cov-report=xml --ignore=tests/test_widget_gallery.py -m "not available_qt"

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Capture theme images
      if: matrix.qt != 'none'
      run: poetry run python ./.github/scripts/capture.py -i ${{runner.os}}-py${{matrix.py}}-${{matrix.qt}} -d ${{ env.TEST_IMG_OUTPUT_PATH}}

    - name: Archive theme images
      if: matrix.qt != 'none'
      uses: actions/upload-artifact@v2
      with:
        name: widget-img
        path: ./${{ env.TEST_IMG_OUTPUT_PATH}}/*.png
