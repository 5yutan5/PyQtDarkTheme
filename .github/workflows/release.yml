name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  Release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v2
    - uses: snok/install-poetry@v1

    - name: Get tag
      id: tag
      run: echo ::set-output name=version::${GITHUB_REF#refs/*/}

    - name: Build project for distribution
      run: poetry build

    - name: Get wheel file path
      id: wheel-file-path
      run: echo ::set-output name=path::$(ls dist/*.whl)

    - name: Install dependencies
      run: |
        python -m pip install PyQt6 rich
        sudo apt-get update -y
        sudo apt-get install --no-install-recommends -y libxkbcommon-x11-0 libopengl0 libyaml-dev libegl1-mesa libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0

    - name: Test build package
      run: |
        python -m pip install ${{ steps.wheel-file-path.outputs.path }}
        python tools/check_build_package.py --tag-version ${{ steps.tag.outputs.version }}
        python -m pip uninstall -y pyqtdarktheme

    - name: Publish to testPyPI
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_TOKEN }}
        poetry publish -r testpypi

    - name: Waite until package is published
      run: sleep 120

    - name: Test testPyPI package
      run: |
        pip install -i https://test.pypi.org/simple/ pyqtdarktheme
        python tools/check_build_package.py --tag-version ${{ steps.tag.outputs.version }}

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false

    - name: Publish to PyPI
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish
